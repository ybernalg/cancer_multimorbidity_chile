# Load dataset from FONASA


# Clean DIAGNOSTICO columns by removing suffixes after dots
diagnostic_cols <- grep("DIAGNOSTICO", names(data))
data[, diagnostic_cols] <- lapply(data[, diagnostic_cols], function(x) gsub("\\..*$", "", x))

# Create nationality variable
data$nationality_dic <- ifelse(data$NACIONALIDAD == "CHILE", "chilean", "non-chilean")

# Categorize age into custom age ranges
data$RANGO_EDAD <- cut(
  data$EDAD,
  breaks = c(-Inf, 35, 51, Inf),
  labels = c("18_35", "36_50", "51_o_mas"),
  right = TRUE
)

# -------- CANCER DIAGNOSIS ------------ #

# Clean DIAGNOSTICO codes (remove suffixes after dot)
diagnostic_cols <- grep("DIAGNOSTICO", names(data))
data[, diagnostic_cols] <- lapply(data[, diagnostic_cols], function(x) gsub("\\..*$", "", x))

# Define ICD-10 cancer groupings
oral <- c("C00", "C01", "C02", "C03", "C04", "C05", "C06", "C07", "C08", "C09", "C10", "C11", "C12", "C13", "C14")
digestivo <- c("C15", "C16", "C17", "C18", "C19", "C20", "C21", "C22", "C23", "C24", "C25", "C26")
respiratorio <- c("C27", "C28", "C29", "C30", "C31", "C32", "C33", "C34", "C35", "C36", "C37", "C38", "C39")
oseo <- c("C40", "C41")
piel <- c("C43", "C44")
blandos <- c("C45", "C46", "C47", "C48", "C49")
mama <- c("C50")
gen_fem <- c("C51", "C52", "C53", "C54", "C55", "C56", "C57", "C58")
gen_masc <- c("C60", "C61", "C62", "C63")
urinario <- c("C64", "C65", "C66", "C67", "C68")
snc <- c("C69", "C70", "C71", "C72")
glandulas <- c("C73", "C74", "C75")
hemato <- c("C81", "C82", "C83", "C84", "C85", "C86", "C87", "C88", "C89", "C90", "C91", "C92", "C93", "C94", "C95", "C96")

# Function to create binary cancer site columns from DIAGNOSTICO1–20
create_cancer_column <- function(df, codes, colname) {
  df[[colname]] <- apply(df[, paste0("DIAGNOSTICO", 1:20)], 1, function(row) {
    ifelse(any(row %in% codes), "si", "no")
  })
  df[[paste0(colname, "_d1")]] <- ifelse(df$DIAGNOSTICO1 %in% codes, "si", "no")
  return(df)
}

# Apply function to each cancer group
cancer_groups <- list(
  oseo = oseo, piel = piel, blandos = blandos, mama = mama,
  gen_fem = gen_fem, gen_masc = gen_masc, urinario = urinario,
  snc = snc, glandulas = glandulas, hemato = hemato,
  oral = oral, digestivo = digestivo, respiratorio = respiratorio
)

for (grp in names(cancer_groups)) {
  data <- create_cancer_column(data, cancer_groups[[grp]], grp)
}

# Global cancer flag
data$cancer <- ifelse(rowSums(data[, paste0(names(cancer_groups), "_d1")] == "si") > 0, "si", "no")

# Cancer type classification (comma-separated list)
data$tipo_cancer <- apply(data[, paste0(names(cancer_groups), "_d1")], 1, function(x) {
  ifelse(any(x == "si"), paste(names(x)[x == "si"], collapse = ","), "no")
})

# ----------- Hospitalization events among cancer patients ------------ #

library(dplyr)

# Filter the dataset to include only adult patients (age ≥ 18)
data <- filter(data, EDAD >= 18)

# Calculate the average and standard deviation of hospitalizations per patient,
# grouped by cancer type
data %>%
  group_by(cancer, CIP_ENCRIPTADO) %>%                        # Group by cancer type and patient ID
  summarise(n_hospitalizaciones = n(), .groups = "drop") %>%  # Count hospitalizations per patient
  group_by(cancer) %>%                                        # Group again by cancer type
  summarise(
    promedio_hospitalizaciones = mean(n_hospitalizaciones),   # Mean hospitalizations per patient
    sd_hospitalizaciones = sd(n_hospitalizaciones)            # Standard deviation
  )


# ----------- Multimorbidity ------------ #

# Load required package
library(dplyr)

# -------------------------
# Define diagnostic groups
# -------------------------
diagnostic_groups <- list(
  hta = c("I10", "I11", "I12", "I13", "I14", "I15"),
  dislip = c("E78"),
  dolor_cronico = c("M40", "M41", "M42", "M43", "M44", "M45", "M47", "M48", "M50", "M51", "M52", "M53", "M54"),
  vision = c("H17", "H18", "H25", "H26", "H27", "H28", "H31", "H33", "H34", "H35", "H36", "H40", "H43", "H47", "H54"),
  osto_rodilla = c("M15", "M16", "M17", "M18", "M19"),
  diabetes = c("E10", "E11", "E12", "E13", "E14"),
  iam = c("I20", "I21", "I25"),
  enf_tiro = c("E01", "E02", "E03", "E04", "E05", "E06", "E07"),
  arritmias = c("I44", "I45", "I46", "I47", "I48", "I49"),
  obesidad = c("E66"),
  gota = c("E79", "M10"),
  hiper_prost = c("N40"),
  varicosis = c("I83", "I87"),
  liver = c("K70", "K71", "K72", "K73", "K74", "K76"),
  depression = c("F32", "F33"),
  asma = c("J40", "J41", "J42", "J43", "J44", "J45", "J47"),
  ginec_prob = c("N81", "N84", "N85", "N86", "N87", "N88", "N89", "N90", "N93", "N95"),
  atero = c("I65", "I66", "I67", "I70", "I73"),
  osteoporosis = c("M80", "M81", "M82"),
  renal_failure = c("N18", "N19"),
  ACV = c("I60", "I61", "I62", "I63", "I64", "I69", "G45"),
  heart_failure = c("I50"),
  loss_hearing = c("H90", "H91"),
  vesicula = c("K80", "K81"),
  somato = c("F45"),
  hemorroides = c("I84"),
  diverticulosis = c("K57"),
  artritis = c("M05", "M06", "M79"),
  valvula = c("I34", "I35", "I36", "I37"),
  neuropatias = c("G50", "G51", "G52", "G53", "G54", "G55", "G56", "G57", "G58", "G59", "G60", "G61", "G62", "G63", "G64"),
  dizziness = c("H81", "H82", "R42"),
  dementia = c("F00", "F01", "F02", "F03", "F05", "G30", "G31", "R54"),
  incontinencia = c("N39", "R32"),
  calculos = c("N20"),
  anemia = c("D50", "D51", "D52", "D53", "D55", "D56", "D57", "D58", "D59", "D60", "D61", "D63", "D64"),
  ansiedad = c("F40", "F41"),
  psoriasis = c("L40"),
  migrana = c("G43", "G44"),
  parkinson = c("G20", "G21", "G22"),
  alergia = c("H01", "J30", "L23", "L27", "L56", "K27", "K28", "K29"),
  sexual = c("F52", "N48"),
  insominio = c("G47", "F51"),
  tobaco = c("F17")
)

# ----------------------------------------------
# Function 1: Generate indicator variables (2^i)
# ----------------------------------------------
create_indicators <- function(df, diagnostic_groups) {
  for (i in seq_along(diagnostic_groups)) {
    group_name <- names(diagnostic_groups)[i]
    codes <- diagnostic_groups[[i]]
    weight <- 2^i
    
    df[[group_name]] <- apply(df[, paste0("DIAGNOSTICO", 1:35)], 1, function(row) {
      ifelse(any(row %in% codes), weight, 0)
    })
  }
  
  # Optional: create string label for combinations
  df$combinations <- apply(df[, names(diagnostic_groups)], 1, function(row) {
    paste(names(row)[row != 0], collapse = ",")
  })
  
  return(df)
}

# -----------------------------------------
# Function 2: Create multimorbidity variable
# -----------------------------------------
create_multimorbilidad <- function(df, diagnostic_groups) {
  for (group_name in names(diagnostic_groups)) {
    codes <- diagnostic_groups[[group_name]]
    df[[group_name]] <- apply(df[, paste0("DIAGNOSTICO", 1:35)], 1, function(row) {
      ifelse(any(row %in% codes), 1, 0)
    })
  }
  
  # Count number of distinct chronic conditions
  df$patologia_count <- rowSums(df[, names(diagnostic_groups)])
  
  # Flag as multimorbid if count > 1
  df$multimorbilidad <- ifelse(df$patologia_count > 1, 1, 0)
  
  return(df)
}

# ----------------------
# Apply to your dataset
# ----------------------
df <- create_indicators(df, diagnostic_groups)
df <- create_multimorbilidad(df, diagnostic_groups)

